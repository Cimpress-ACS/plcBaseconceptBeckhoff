<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.18">
  <POU Name="MiddlePRG_1" Id="{fc4c9c72-f24d-4184-a857-29a82ecbaa1c}">
    <Declaration><![CDATA[PROGRAM MiddlePRG_1
VAR
	bolPlcStartupDone: BOOL := FALSE;
	bolHostInitDone : BOOL := FALSE;
	bolInitDone : BOOL := FALSE;
	fbCyl_AB: FB_CYL;
	fbMOD_2: FB_MOD;
	fbVER_2: FB_CYL;
	fbHOR_2: FB_CYL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*__________________________________________________________________________________________________
¦	
¦	Vistaprint Schweiz GmbH
¦	CH - 8401 Winterthur
¦
¦	www.vistaprint.ch - info@vistaprint.ch
¦___________________________________________________________________________________________________

Function desription:
call of all controller (FUB) for the middel task class inclusiv alarm handler.


History:
Version		Date			Author		Comment
---------------------------------------------------------------------------------------------------
0.00.1		02.05.2013		AVME/KVO	Start history


___________________________________________________________________________________________________*)

// -----------------------------------------------------------------------------------------------
// Initialize the PLC Parameter and check the PLC health
// -----------------------------------------------------------------------------------------------
IF (NOT bolPlcStartupDone) THEN
	bolPlcStartupDone := TRUE;	
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// The host system is downloading all parameter at startup. 
// bolPlcStartupDone will be set to true after the Host is done with the initialization
// -----------------------------------------------------------------------------------------------
IF (bolPlcStartupDone AND (NOT bolHostInitDone) AND NOT bolInitDone) THEN
	bolHostInitDone := TRUE;
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// Start PLC code initialization
// -----------------------------------------------------------------------------------------------
IF NOT bolInitDone AND bolPlcStartupDone AND bolHostInitDone THEN
	
	// init
	fbCyl_AB.iniCtrlArray(ADR(g_a_pCtrlInst),E_CtrlId.CYL_VER1);     	// init and entry fb_instance in global fb pointer array
	g_a_pCtrlCIf[E_CtrlId.CYL_VER1] := fbCyl_AB.getCtrlCIf();    // get adr of ctrl interface struct
	
	// init module example
	// Lvl0
	fbHOR_2.iniCtrlArray(ADR(g_a_pCtrlInst),E_CtrlId.HOR_2); // init and entry fb_instance in global fb pointer array
	g_a_pCtrlCIf[E_CtrlId.HOR_2] := fbHOR_2.getCtrlCIf();    // get adr of ctrl interface struct
	
	fbVER_2.iniCtrlArray(ADR(g_a_pCtrlInst),E_CtrlId.VER_2); // init and entry fb_instance in global fb pointer array
	g_a_pCtrlCIf[E_CtrlId.VER_2] := fbVER_2.getCtrlCIf();    // get adr of ctrl interface struct
	
	//Lvl2
	fbMOD_2.iniCtrlArray(ADR(g_a_pCtrlInst),E_CtrlId.MOD_2); // init and entry fb_instance in global fb pointer array
	g_a_pCtrlCIf[E_CtrlId.MOD_2] := fbMOD_2.getCtrlCIf();    // get adr of ctrl interface struct
	
	// add childs
	fbMOD_2.p_fbHOR := g_a_pCtrlInst[E_CtrlId.HOR_2];
	fbMOD_2.p_fbVER := g_a_pCtrlInst[E_CtrlId.VER_2];

	bolInitDone := TRUE;
END_IF
// -----------------------------------------------------------------------------------------------



// -----------------------------------------------------------------------------------------------
// Normal Run mode after all the initialization is done
// -----------------------------------------------------------------------------------------------
IF (bolInitDone AND bolPlcStartupDone AND bolHostInitDone) THEN
	
	//****************************************************************************************************
	// cyclic controller calls
	//****************************************************************************************************
	fbCyl_AB.In_bolRetracted := In_bolCyl_AB_Retracted_NO;
	fbCyl_AB.In_bolExtended := (NOT In_bolCyl_AB_Extended_NC);
	fbCyl_AB();
	Out_bolCyl_AB_Retract := fbCyl_AB.Out_bolRetract;
	Out_bolCyl_AB_Extend := fbCyl_AB.Out_bolExtend;

	// Modul example
	// ----------------------------------------------------------------------------------------------------------------------------
	// modul controller MOD_2 with childs
	fbMOD_2();
	fbVER_2();
	fbHOR_2();

	
END_IF
// -----------------------------------------------------------------------------------------------




	]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>